Todo:
=====
.World: square_neighbours_if
.World: any_square_neighbour_if
.Pacman::priority (fewest reachable squares implies biggest priority)
.Manage pacmans in increasing order of priority
.Send actions in increasing order of priority
.Use exploration algos
.Spread exploration: set_visited(const Position& root_position)

Ideas:
======
.Pacman's Strategy:
  .role_ : enum Pacman_role
  ~action_todo_ : Action_sptr
  .action_sent_ : Action_sptr
  .strategy_ : Strategy_uptr
    .goal_ : Position
    .make_action_todo()

Done:
=====
.Move Game strategies to Avatar
.Pacman::Type -> Pacman_type
.World::big_pellets_,::small_pellets_
.Player::active_pacmans_,::pacmans_
.Pacman::previous_position_
.Action::message_
